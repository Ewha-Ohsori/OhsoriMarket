// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/loxilb-io/loxilb/api/models"
)

// DeleteConfigIpv4addressIPAddressDevIfNameNoContentCode is the HTTP code returned for type DeleteConfigIpv4addressIPAddressDevIfNameNoContent
const DeleteConfigIpv4addressIPAddressDevIfNameNoContentCode int = 204

/*
DeleteConfigIpv4addressIPAddressDevIfNameNoContent OK

swagger:response deleteConfigIpv4addressIpAddressDevIfNameNoContent
*/
type DeleteConfigIpv4addressIPAddressDevIfNameNoContent struct {
}

// NewDeleteConfigIpv4addressIPAddressDevIfNameNoContent creates DeleteConfigIpv4addressIPAddressDevIfNameNoContent with default headers values
func NewDeleteConfigIpv4addressIPAddressDevIfNameNoContent() *DeleteConfigIpv4addressIPAddressDevIfNameNoContent {

	return &DeleteConfigIpv4addressIPAddressDevIfNameNoContent{}
}

// WriteResponse to the client
func (o *DeleteConfigIpv4addressIPAddressDevIfNameNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DeleteConfigIpv4addressIPAddressDevIfNameBadRequestCode is the HTTP code returned for type DeleteConfigIpv4addressIPAddressDevIfNameBadRequest
const DeleteConfigIpv4addressIPAddressDevIfNameBadRequestCode int = 400

/*
DeleteConfigIpv4addressIPAddressDevIfNameBadRequest Malformed arguments for API call

swagger:response deleteConfigIpv4addressIpAddressDevIfNameBadRequest
*/
type DeleteConfigIpv4addressIPAddressDevIfNameBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteConfigIpv4addressIPAddressDevIfNameBadRequest creates DeleteConfigIpv4addressIPAddressDevIfNameBadRequest with default headers values
func NewDeleteConfigIpv4addressIPAddressDevIfNameBadRequest() *DeleteConfigIpv4addressIPAddressDevIfNameBadRequest {

	return &DeleteConfigIpv4addressIPAddressDevIfNameBadRequest{}
}

// WithPayload adds the payload to the delete config ipv4address Ip address dev if name bad request response
func (o *DeleteConfigIpv4addressIPAddressDevIfNameBadRequest) WithPayload(payload *models.Error) *DeleteConfigIpv4addressIPAddressDevIfNameBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config ipv4address Ip address dev if name bad request response
func (o *DeleteConfigIpv4addressIPAddressDevIfNameBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigIpv4addressIPAddressDevIfNameBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteConfigIpv4addressIPAddressDevIfNameUnauthorizedCode is the HTTP code returned for type DeleteConfigIpv4addressIPAddressDevIfNameUnauthorized
const DeleteConfigIpv4addressIPAddressDevIfNameUnauthorizedCode int = 401

/*
DeleteConfigIpv4addressIPAddressDevIfNameUnauthorized Invalid authentication credentials

swagger:response deleteConfigIpv4addressIpAddressDevIfNameUnauthorized
*/
type DeleteConfigIpv4addressIPAddressDevIfNameUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteConfigIpv4addressIPAddressDevIfNameUnauthorized creates DeleteConfigIpv4addressIPAddressDevIfNameUnauthorized with default headers values
func NewDeleteConfigIpv4addressIPAddressDevIfNameUnauthorized() *DeleteConfigIpv4addressIPAddressDevIfNameUnauthorized {

	return &DeleteConfigIpv4addressIPAddressDevIfNameUnauthorized{}
}

// WithPayload adds the payload to the delete config ipv4address Ip address dev if name unauthorized response
func (o *DeleteConfigIpv4addressIPAddressDevIfNameUnauthorized) WithPayload(payload *models.Error) *DeleteConfigIpv4addressIPAddressDevIfNameUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config ipv4address Ip address dev if name unauthorized response
func (o *DeleteConfigIpv4addressIPAddressDevIfNameUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigIpv4addressIPAddressDevIfNameUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteConfigIpv4addressIPAddressDevIfNameForbiddenCode is the HTTP code returned for type DeleteConfigIpv4addressIPAddressDevIfNameForbidden
const DeleteConfigIpv4addressIPAddressDevIfNameForbiddenCode int = 403

/*
DeleteConfigIpv4addressIPAddressDevIfNameForbidden Capacity insufficient

swagger:response deleteConfigIpv4addressIpAddressDevIfNameForbidden
*/
type DeleteConfigIpv4addressIPAddressDevIfNameForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteConfigIpv4addressIPAddressDevIfNameForbidden creates DeleteConfigIpv4addressIPAddressDevIfNameForbidden with default headers values
func NewDeleteConfigIpv4addressIPAddressDevIfNameForbidden() *DeleteConfigIpv4addressIPAddressDevIfNameForbidden {

	return &DeleteConfigIpv4addressIPAddressDevIfNameForbidden{}
}

// WithPayload adds the payload to the delete config ipv4address Ip address dev if name forbidden response
func (o *DeleteConfigIpv4addressIPAddressDevIfNameForbidden) WithPayload(payload *models.Error) *DeleteConfigIpv4addressIPAddressDevIfNameForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config ipv4address Ip address dev if name forbidden response
func (o *DeleteConfigIpv4addressIPAddressDevIfNameForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigIpv4addressIPAddressDevIfNameForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteConfigIpv4addressIPAddressDevIfNameNotFoundCode is the HTTP code returned for type DeleteConfigIpv4addressIPAddressDevIfNameNotFound
const DeleteConfigIpv4addressIPAddressDevIfNameNotFoundCode int = 404

/*
DeleteConfigIpv4addressIPAddressDevIfNameNotFound Resource not found

swagger:response deleteConfigIpv4addressIpAddressDevIfNameNotFound
*/
type DeleteConfigIpv4addressIPAddressDevIfNameNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteConfigIpv4addressIPAddressDevIfNameNotFound creates DeleteConfigIpv4addressIPAddressDevIfNameNotFound with default headers values
func NewDeleteConfigIpv4addressIPAddressDevIfNameNotFound() *DeleteConfigIpv4addressIPAddressDevIfNameNotFound {

	return &DeleteConfigIpv4addressIPAddressDevIfNameNotFound{}
}

// WithPayload adds the payload to the delete config ipv4address Ip address dev if name not found response
func (o *DeleteConfigIpv4addressIPAddressDevIfNameNotFound) WithPayload(payload *models.Error) *DeleteConfigIpv4addressIPAddressDevIfNameNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config ipv4address Ip address dev if name not found response
func (o *DeleteConfigIpv4addressIPAddressDevIfNameNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigIpv4addressIPAddressDevIfNameNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteConfigIpv4addressIPAddressDevIfNameConflictCode is the HTTP code returned for type DeleteConfigIpv4addressIPAddressDevIfNameConflict
const DeleteConfigIpv4addressIPAddressDevIfNameConflictCode int = 409

/*
DeleteConfigIpv4addressIPAddressDevIfNameConflict Resource Conflict. VLAN already exists OR dependency VRF/VNET not found

swagger:response deleteConfigIpv4addressIpAddressDevIfNameConflict
*/
type DeleteConfigIpv4addressIPAddressDevIfNameConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteConfigIpv4addressIPAddressDevIfNameConflict creates DeleteConfigIpv4addressIPAddressDevIfNameConflict with default headers values
func NewDeleteConfigIpv4addressIPAddressDevIfNameConflict() *DeleteConfigIpv4addressIPAddressDevIfNameConflict {

	return &DeleteConfigIpv4addressIPAddressDevIfNameConflict{}
}

// WithPayload adds the payload to the delete config ipv4address Ip address dev if name conflict response
func (o *DeleteConfigIpv4addressIPAddressDevIfNameConflict) WithPayload(payload *models.Error) *DeleteConfigIpv4addressIPAddressDevIfNameConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config ipv4address Ip address dev if name conflict response
func (o *DeleteConfigIpv4addressIPAddressDevIfNameConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigIpv4addressIPAddressDevIfNameConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteConfigIpv4addressIPAddressDevIfNameInternalServerErrorCode is the HTTP code returned for type DeleteConfigIpv4addressIPAddressDevIfNameInternalServerError
const DeleteConfigIpv4addressIPAddressDevIfNameInternalServerErrorCode int = 500

/*
DeleteConfigIpv4addressIPAddressDevIfNameInternalServerError Internal service error

swagger:response deleteConfigIpv4addressIpAddressDevIfNameInternalServerError
*/
type DeleteConfigIpv4addressIPAddressDevIfNameInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteConfigIpv4addressIPAddressDevIfNameInternalServerError creates DeleteConfigIpv4addressIPAddressDevIfNameInternalServerError with default headers values
func NewDeleteConfigIpv4addressIPAddressDevIfNameInternalServerError() *DeleteConfigIpv4addressIPAddressDevIfNameInternalServerError {

	return &DeleteConfigIpv4addressIPAddressDevIfNameInternalServerError{}
}

// WithPayload adds the payload to the delete config ipv4address Ip address dev if name internal server error response
func (o *DeleteConfigIpv4addressIPAddressDevIfNameInternalServerError) WithPayload(payload *models.Error) *DeleteConfigIpv4addressIPAddressDevIfNameInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config ipv4address Ip address dev if name internal server error response
func (o *DeleteConfigIpv4addressIPAddressDevIfNameInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigIpv4addressIPAddressDevIfNameInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteConfigIpv4addressIPAddressDevIfNameServiceUnavailableCode is the HTTP code returned for type DeleteConfigIpv4addressIPAddressDevIfNameServiceUnavailable
const DeleteConfigIpv4addressIPAddressDevIfNameServiceUnavailableCode int = 503

/*
DeleteConfigIpv4addressIPAddressDevIfNameServiceUnavailable Maintanence mode

swagger:response deleteConfigIpv4addressIpAddressDevIfNameServiceUnavailable
*/
type DeleteConfigIpv4addressIPAddressDevIfNameServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteConfigIpv4addressIPAddressDevIfNameServiceUnavailable creates DeleteConfigIpv4addressIPAddressDevIfNameServiceUnavailable with default headers values
func NewDeleteConfigIpv4addressIPAddressDevIfNameServiceUnavailable() *DeleteConfigIpv4addressIPAddressDevIfNameServiceUnavailable {

	return &DeleteConfigIpv4addressIPAddressDevIfNameServiceUnavailable{}
}

// WithPayload adds the payload to the delete config ipv4address Ip address dev if name service unavailable response
func (o *DeleteConfigIpv4addressIPAddressDevIfNameServiceUnavailable) WithPayload(payload *models.Error) *DeleteConfigIpv4addressIPAddressDevIfNameServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete config ipv4address Ip address dev if name service unavailable response
func (o *DeleteConfigIpv4addressIPAddressDevIfNameServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteConfigIpv4addressIPAddressDevIfNameServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
