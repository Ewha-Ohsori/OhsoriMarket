// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteConfigIpv4addressIPAddressDevIfNameHandlerFunc turns a function with the right signature into a delete config ipv4address IP address dev if name handler
type DeleteConfigIpv4addressIPAddressDevIfNameHandlerFunc func(DeleteConfigIpv4addressIPAddressDevIfNameParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteConfigIpv4addressIPAddressDevIfNameHandlerFunc) Handle(params DeleteConfigIpv4addressIPAddressDevIfNameParams) middleware.Responder {
	return fn(params)
}

// DeleteConfigIpv4addressIPAddressDevIfNameHandler interface for that can handle valid delete config ipv4address IP address dev if name params
type DeleteConfigIpv4addressIPAddressDevIfNameHandler interface {
	Handle(DeleteConfigIpv4addressIPAddressDevIfNameParams) middleware.Responder
}

// NewDeleteConfigIpv4addressIPAddressDevIfName creates a new http.Handler for the delete config ipv4address IP address dev if name operation
func NewDeleteConfigIpv4addressIPAddressDevIfName(ctx *middleware.Context, handler DeleteConfigIpv4addressIPAddressDevIfNameHandler) *DeleteConfigIpv4addressIPAddressDevIfName {
	return &DeleteConfigIpv4addressIPAddressDevIfName{Context: ctx, Handler: handler}
}

/*
	DeleteConfigIpv4addressIPAddressDevIfName swagger:route DELETE /config/ipv4address/{ip_address}/dev/{if_name} deleteConfigIpv4addressIpAddressDevIfName

# Delete IPv4 addresses in the device

Delete IPv4 addresses in the device
*/
type DeleteConfigIpv4addressIPAddressDevIfName struct {
	Context *middleware.Context
	Handler DeleteConfigIpv4addressIPAddressDevIfNameHandler
}

func (o *DeleteConfigIpv4addressIPAddressDevIfName) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewDeleteConfigIpv4addressIPAddressDevIfNameParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
