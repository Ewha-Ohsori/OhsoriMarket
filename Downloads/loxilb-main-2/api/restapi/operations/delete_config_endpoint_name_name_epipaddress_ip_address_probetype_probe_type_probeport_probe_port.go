// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteConfigEndpointNameNameEpipaddressIPAddressProbetypeProbeTypeProbeportProbePortHandlerFunc turns a function with the right signature into a delete config endpoint name name epipaddress IP address probetype probe type probeport probe port handler
type DeleteConfigEndpointNameNameEpipaddressIPAddressProbetypeProbeTypeProbeportProbePortHandlerFunc func(DeleteConfigEndpointNameNameEpipaddressIPAddressProbetypeProbeTypeProbeportProbePortParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteConfigEndpointNameNameEpipaddressIPAddressProbetypeProbeTypeProbeportProbePortHandlerFunc) Handle(params DeleteConfigEndpointNameNameEpipaddressIPAddressProbetypeProbeTypeProbeportProbePortParams) middleware.Responder {
	return fn(params)
}

// DeleteConfigEndpointNameNameEpipaddressIPAddressProbetypeProbeTypeProbeportProbePortHandler interface for that can handle valid delete config endpoint name name epipaddress IP address probetype probe type probeport probe port params
type DeleteConfigEndpointNameNameEpipaddressIPAddressProbetypeProbeTypeProbeportProbePortHandler interface {
	Handle(DeleteConfigEndpointNameNameEpipaddressIPAddressProbetypeProbeTypeProbeportProbePortParams) middleware.Responder
}

// NewDeleteConfigEndpointNameNameEpipaddressIPAddressProbetypeProbeTypeProbeportProbePort creates a new http.Handler for the delete config endpoint name name epipaddress IP address probetype probe type probeport probe port operation
func NewDeleteConfigEndpointNameNameEpipaddressIPAddressProbetypeProbeTypeProbeportProbePort(ctx *middleware.Context, handler DeleteConfigEndpointNameNameEpipaddressIPAddressProbetypeProbeTypeProbeportProbePortHandler) *DeleteConfigEndpointNameNameEpipaddressIPAddressProbetypeProbeTypeProbeportProbePort {
	return &DeleteConfigEndpointNameNameEpipaddressIPAddressProbetypeProbeTypeProbeportProbePort{Context: ctx, Handler: handler}
}

/*
	DeleteConfigEndpointNameNameEpipaddressIPAddressProbetypeProbeTypeProbeportProbePort swagger:route DELETE /config/endpoint/name/{name}/epipaddress/{ip_address}/probetype/{probe_type}/probeport/{probe_port} deleteConfigEndpointNameNameEpipaddressIpAddressProbetypeProbeTypeProbeportProbePort

# Delete an LB end-point from monitoring

Delete an LB end-point from monitoring
*/
type DeleteConfigEndpointNameNameEpipaddressIPAddressProbetypeProbeTypeProbeportProbePort struct {
	Context *middleware.Context
	Handler DeleteConfigEndpointNameNameEpipaddressIPAddressProbetypeProbeTypeProbeportProbePortHandler
}

func (o *DeleteConfigEndpointNameNameEpipaddressIPAddressProbetypeProbeTypeProbeportProbePort) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewDeleteConfigEndpointNameNameEpipaddressIPAddressProbetypeProbeTypeProbeportProbePortParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
