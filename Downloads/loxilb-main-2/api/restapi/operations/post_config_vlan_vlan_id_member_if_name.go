// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// PostConfigVlanVlanIDMemberIfNameHandlerFunc turns a function with the right signature into a post config vlan vlan ID member if name handler
type PostConfigVlanVlanIDMemberIfNameHandlerFunc func(PostConfigVlanVlanIDMemberIfNameParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostConfigVlanVlanIDMemberIfNameHandlerFunc) Handle(params PostConfigVlanVlanIDMemberIfNameParams) middleware.Responder {
	return fn(params)
}

// PostConfigVlanVlanIDMemberIfNameHandler interface for that can handle valid post config vlan vlan ID member if name params
type PostConfigVlanVlanIDMemberIfNameHandler interface {
	Handle(PostConfigVlanVlanIDMemberIfNameParams) middleware.Responder
}

// NewPostConfigVlanVlanIDMemberIfName creates a new http.Handler for the post config vlan vlan ID member if name operation
func NewPostConfigVlanVlanIDMemberIfName(ctx *middleware.Context, handler PostConfigVlanVlanIDMemberIfNameHandler) *PostConfigVlanVlanIDMemberIfName {
	return &PostConfigVlanVlanIDMemberIfName{Context: ctx, Handler: handler}
}

/*
	PostConfigVlanVlanIDMemberIfName swagger:route POST /config/vlan/{vlan_id}/member/{if_name} postConfigVlanVlanIdMemberIfName

# Add a physical port to a vlan interface

Add a member to interface Vlan{vlan_id}. If the vlan interface does not exist on LoxiLB it returns a '404' error. If such a member is already present on this Vlan interface the API returns '409' sub-code 0. If the vlan_id passed is less than 2 or greater than 4094 the API will respond with error '400'. If attr with tagging mode is provided it will be honored in config, if not, the default tagging mode will be set to 'untagged'. Vlan members may be tagged or untagged, but, the Vlan member port may be untagged in only one Vlan interface, deviations from this will cause the API to return '409' sub-code 0.
*/
type PostConfigVlanVlanIDMemberIfName struct {
	Context *middleware.Context
	Handler PostConfigVlanVlanIDMemberIfNameHandler
}

func (o *PostConfigVlanVlanIDMemberIfName) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewPostConfigVlanVlanIDMemberIfNameParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
